generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id           String           @id // UUID do Supabase Auth
  name         String
  matricula    String            @unique
  profilePic   String?
  createdAt    DateTime          @default(now())
  isAdmin      Boolean           @default(false)
  isSuperAdmin Boolean           @default(false)

  // Relações
  items        Item[]
  validations  ItemValidation[]  @relation("ProfileValidations")
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  items Item[]
}

model Item {
  id          Int              @id @default(autoincrement())
  title       String
  description String
  status      String           @default("perdido")
  location    String
  createdAt   DateTime         @default(now())
  userId      String
  categoryId  Int?

  user        Profile           @relation(fields: [userId], references: [id])
  category    Category?         @relation(fields: [categoryId], references: [id])
  images      ItemImage[]
  validations ItemValidation[]  @relation("ItemValidations")
}

model ItemImage {
  id     Int    @id @default(autoincrement())
  url    String
  itemId Int
  item   Item   @relation(fields: [itemId], references: [id], onDelete: Cascade)
}

model ItemValidation {
  id              Int       @id @default(autoincrement())
  userId          String?
  itemId          Int
  descricao       String
  localPerda      String
  detalhesUnicos  String
  conteudoInterno String
  momentoPerda    String
  createdAt       DateTime  @default(now())

  // Relações
  profile Profile? @relation("ProfileValidations", fields: [userId], references: [id])
  item    Item     @relation("ItemValidations", fields: [itemId], references: [id])
}
